name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  RUSTFLAGS: -Dwarnings

jobs:
  check:
    name: cargo check
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - name: Configure rustc version
        run: |
          # use the version defined in gluwa/creditcoin3
          RUSTC_VERSION=$(curl --silent https://raw.githubusercontent.com/gluwa/creditcoin3/dev/rust-toolchain.toml | grep channel | tail -n1 | tr -d " " | cut -f2 -d'"')
          echo "RUSTC_VERSION=$RUSTC_VERSION" >> "$GITHUB_ENV"

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUSTC_VERSION }}
          profile: minimal
          override: true

      - run: cargo check
  fmt:
    name: check formatting
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Configure rustc version
        run: |
          # use the version defined in gluwa/creditcoin3
          RUSTC_VERSION=$(curl --silent https://raw.githubusercontent.com/gluwa/creditcoin3/dev/rust-toolchain.toml | grep channel | tail -n1 | tr -d " " | cut -f2 -d'"')
          echo "RUSTC_VERSION=$RUSTC_VERSION" >> "$GITHUB_ENV"

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUSTC_VERSION }}
          profile: minimal
          override: true
          components: rustfmt
      - run: cargo fmt -- --check
  clippy:
    name: cargo clippy
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Configure rustc version
        run: |
          # use the version defined in gluwa/creditcoin3
          RUSTC_VERSION=$(curl --silent https://raw.githubusercontent.com/gluwa/creditcoin3/dev/rust-toolchain.toml | grep channel | tail -n1 | tr -d " " | cut -f2 -d'"')
          echo "RUSTC_VERSION=$RUSTC_VERSION" >> "$GITHUB_ENV"

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUSTC_VERSION }}
          profile: minimal
          override: true
          components: clippy
      - run: cargo clippy -- -Dclippy::all -Dclippy::pedantic
